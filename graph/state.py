from typing import TypedDict


class GraphState(TypedDict):
    """
    Represents the state of our graph.

    Attributes:
        request: All user request text.
        search_queries: List of search queries to perform.
        knowledge: Knowledge used to generate the blog post.
        post_content: The content of the blog post generated by the model.
        user_feedback: Feedback on the latest draft.
    """

    request: str
    search_queries: list[str]
    knowledge: list[str]
    post_content: str
    user_feedback: str

    @classmethod
    def create(
        cls,
        request: str = "",
        search_queries: list[str] = None,
        knowledge: list[str] = None,
        post_content: str = "",
        user_feedback: str = "",
    ) -> "GraphState":
        return GraphState(
            request=request,
            search_queries=search_queries or [],
            knowledge=knowledge or [],
            post_content=post_content,
            user_feedback=user_feedback,
        )
